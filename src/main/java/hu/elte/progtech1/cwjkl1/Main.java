package hu.elte.progtech1.cwjkl1;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class Main extends JFrame {
    private JButton newGameBtn;
    private JSpinner dimSpinner;
    private JSlider dimSlider;
    private JPanel newRubikTablePanel;

    private int dim;

    public Main() {
        super();
        dim = 8;
        JFrame frame = new JFrame("Rubik Table Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        frame.setContentPane(newRubikTablePanel);
        dimSpinner.setName("Dimension Spinner");
        dimSpinner.setValue(dim);
        dimSlider.setName("Dimension Slider");
        dimSlider.setValue(dim);
        newGameBtn.setName("Start New Game");

        frame.pack();
        frame.setVisible(true);
        dimSpinner.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                dimSpinner.validate();
                dim = Integer.parseInt(dimSpinner.getValue().toString());
                if (dim < 2) {
                    dim = 2;
                    dimSpinner.setValue(dim);
                }
                if (dim > 32) {
                    dim = 32;
                    dimSpinner.setValue(dim);
                }
                dimSlider.setValue(dim);
            }
        });
        dimSlider.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                dim = dimSlider.getValue();
                dimSpinner.setValue(dim);
            }
        });
        newGameBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                HelloDialog dialog = new HelloDialog(dim);
                dialog.pack();
                dialog.setVisible(true);
            }
        });
    }

    public static void main(String[] args) {
        Main main = new Main();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        newRubikTablePanel = new JPanel();
        newRubikTablePanel.setLayout(new GridBagLayout());
        newRubikTablePanel.setMaximumSize(new Dimension(640, 64));
        newRubikTablePanel.setMinimumSize(new Dimension(640, 64));
        newRubikTablePanel.setPreferredSize(new Dimension(480, 64));
        newRubikTablePanel.setToolTipText("Start a new Rubik Table Game");
        newGameBtn = new JButton();
        newGameBtn.setText("New Game");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        newRubikTablePanel.add(newGameBtn, gbc);
        dimSpinner = new JSpinner();
        dimSpinner.setToolTipText("The dimension of the Rubik Table has to be a positive integer");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        newRubikTablePanel.add(dimSpinner, gbc);
        dimSlider = new JSlider();
        dimSlider.setMaximum(32);
        dimSlider.setMinimum(2);
        dimSlider.setPaintLabels(true);
        dimSlider.setPaintTicks(true);
        dimSlider.setSnapToTicks(true);
        dimSlider.setToolTipText("Set the dimension of the Rubik Table");
        dimSlider.setValue(4);
        dimSlider.setValueIsAdjusting(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        newRubikTablePanel.add(dimSlider, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return newRubikTablePanel;
    }
}
